#include "Screen.h"
//#include "Game.h"
#include "palette.h"

#include <curses.h>

//void screen(GameBoard * board)

void screen()
{
    initscr();                         //включение графической библиотеки
    keypad(stdscr, TRUE);              //обработка командных клавиш (стрелки)
    curs_set(0);                       //убирает мигающий курсор в консоли
    InitPalette();
    noecho();


    for (int i = 0; i < 30; ++ i)     //указатель на выстоу игр. поля
    {
        for (int j = 0; j < 110; ++ j)  //указатель на ширину игр. поля
        {
            move(i, j);                                         //заполнение поля?
            attron(COLOR_PAIR(Screen_palett));
            chtype ch = ' ' | COLOR_PAIR(Screen_palett);        //функционал из библиотеки
            addch(ch);                                          //заполнение поля (функционал из библиотеки)
            mvprintw(7, 2, "     ..-:***************.    ...:****************:     ..:****************..       ..:*:--:*-.             ");
            mvprintw(8, 2, "   ..*-...              --  ..*... .             .:  ..*...               :.       .*.........:-.          ");
            mvprintw(9, 2, " .*....-**::::::::::::::.  :.  .:*:::::::::::::::- .*.  .:*:::::::::::::::..     .*...*.:-:-. --.          ");
            mvprintw(10, 2," .*. .:--*-.............:-.:-..:--:-..............: :. .:-::-.............*.     .:. .:.*.-::. .:.         ");
            mvprintw(11, 2," :. .:.*. ..............--.*. .:--   .............: *. .::.   ............:.    .-: .--:.  :.*. .*.        ");
            mvprintw(12, 2," *. .*-- .:................*. .:--  :-............. *  .::. .*...............   .*. .*--.  .*-: .--        ");
            mvprintw(13, 2," :. .:.*..       ..::..   .*. .:--            .:    *  .::. .*.:          :.   .:. .*.*     -::...:..      ");
            mvprintw(14, 2," .*. .::-*::-----.....*.  .*. .:-:::::::::::::::    *  .::. .*.*:::::::.  :.  .--..--*.     .:.*...*.      ");
            mvprintw(15, 2,"  .*-.  .:******:.-:...:-..*. .:-**************-.   *  .::. .*.******:--  :. ..*...:--  .*-  .*.:. -:.     ");
            mvprintw(16, 2,"    .::...      ..:.*...*..*. .:--   .        .:    *  .::. .*.:    .*--  :. .:. .*.*. .:.:....::. .:.     ");
            mvprintw(17, 2,"        .-:::::*. .*.:. --.*. .:--  :::::::::::-    *  .::. .*.::*. .*--  :..-- .--*.  -:..*.  :.*. .*.    ");
            mvprintw(18, 2," *.............. ..*--. :..*. .:--. .............-: *  .::.  ...... .*--  :..*. .:-- ..*:....  .*.: .-:    ");
            mvprintw(19, 2," *...............::-:...*..:...:.*-...............: :.  *.*..........*--  :.*...*.:  .:-:........::-..:.   ");
            mvprintw(20, 2," ...............-*:.  .*....*...-*-................ .*. .-*-..........--  ::-. :-*. .--............*...*.  ");
            mvprintw(21, 2," *.                ..*.     .::..                .:  .::..               .-:...:--  .*..:.             -:. ");
            mvprintw(22, 2," *--------------:**-..       ...:*::-------------::    ..:*::-----------------*.*---*. .*---------------*. ");
                    }
    }
    attron(COLOR_PAIR(TEXT));
    mvprintw(28, 92, "press any key");

    getch();

}

